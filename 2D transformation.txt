#include<windows.h>
#include"glut.h"
#include<iostream>
#include<stdlib.h>

using namespace std;
void handleKeypress(unsigned char key,int x,int y)
{
	switch(key)
	{
	case 27:
		exit(0);
	}
}
void initRendering()
{
	glEnable(GL_DEPTH_TEST);
}
void handleResize(int w,int h)
{
	glViewport(0,0,w,h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluPerspective(45.0,(double)w/(double)h,1.0,200.0);
}
float angle=0.0;

float cameraangle=40.0;

void drawScene()
{
	glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	glRotatef(cameraangle,0.0f,1.0f,0.0f);
	glTranslatef(0.0f,0.0f,-10.0f);
	glPushMatrix();
	glTranslatef(5.0f,-1.0f,0.0f);
	glScalef(2.0f,2.0f,2.0f);
	glRotatef(angle,1.0f,3.0f,2.0f);
	glBegin(GL_QUADS);
	glVertex3f(-0.7f,0.0f,0.0);
	glVertex3f(0.7f,0.0f,0.0);
	glVertex3f(0.5f,2.0f,0.0);
	glVertex3f(-0.5f,2.0f,0.0);
	glEnd();
	glPopMatrix();
	glutSwapBuffers();
}
void update(int value)
{
	angle+=2.0f;
	if(angle>360.f)
	{
		angle-=360;
	}
	glutPostRedisplay();
	glutTimerFunc(25,update,0);
}
int main(int argc,char**argv)
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB|GLUT_DEPTH);
	glutInitWindowSize(600,600);
	glutCreateWindow("rotate");
	initRendering();
	glutDisplayFunc(drawScene);
	glutKeyboardFunc(handleKeypress);
	glutReshapeFunc(handleResize);
	glutTimerFunc(25,update,0);
	glutMainLoop();
	return 0;
}